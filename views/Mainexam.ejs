<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Main Exam</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #f4f4f4;
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            height: 100vh;
            flex-direction: row;
            overflow-x: hidden;
        }
        .quiz-container {
            width: 70%;
            background: white;
            padding: 10px;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
            text-align: center;
            margin-left: 10px;
            overflow-y: auto;
            height: calc(100vh - 40px);
        }
        .timer {
            font-size: 24px;
            font-weight: bold;
            color: red;
            margin-bottom: 20px;
        }
        .option {
            display: block;
            width: 100%;
            margin: 10px 0;
            padding: 15px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: 0.3s;
        }
        .option:hover { background: #0056b3; }
        .selected { background: orange !important; }
        .btn-container { margin-top: 15px; }
        .btn { padding: 10px 15px; margin: 5px; font-size: 14px; border: none; border-radius: 5px; cursor: pointer; }
        .prev { background: #418bcc; color: white; }
        .next { background: #28a745; color: white; }
        .submit-btn { background: #dc3545; color: white; }
        .number-panel {
            display: inline;
            left: 10px;
            background: #f4f4f4;
            padding: 10px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
            height: calc(100vh - 40px);
            overflow-y: auto;
            width: 17%;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            align-items: flex-start;
            transition: all 0.3s ease;
        }
        .number-panel button {
            width: 30%;
            height: 40px;
            margin: 5px;
            padding: 5px;
            font-size: 16px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s;
        }
        .number-panel button.attempted {
            background: orangered;
        }
        .number-panel button:hover {
            background: #0056b3;
        }
        @media (max-width: 768px) {
            .quiz-container {
                width: 100%;
                margin-left: 0;
            }
            .number-panel {
                position: relative;
                top: auto;
                left: auto;
                width: 100%;
                display: flex;
                justify-content: center;
                flex-wrap: wrap;
                margin-top: 20px;
                height: auto;
            }
            .number-panel button {
                width: 50px;
                height: 50px;
                margin: 5px;
            }
        }
        @media (max-width: 768px) {
    .number-panel {
        position: fixed;
        bottom: 0;
        width: 100%;
        height: auto;
        background-color: #f4f4f4;
        padding: 40px 5px 5px 5px; /* 🧠 this adds enough top padding for the numbers to breathe */
        box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
        z-index: 100;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
    }

    .number-button {
        width: calc(33.33% - 10px);
        margin: 5px;
    }
}

    </style>
</head>
<body>

    <div class="number-panel" id="number-panel"></div>

    <div class="quiz-container">
        <h3 style="text-align: left;"><a href="/Homepage">Back</a></h3>

        <!-- ✅ Quiz Selection -->
        <div id="quiz-selection">
            <h2>Select a Quiz</h2>
            <select id="quizDropdown">
                <option value="">Select a Quiz</option>
                <option value="Management">Management</option>
                <option value="Emerging Trends in Computer & IT">Emerging Trends in Computer & IT</option>
                <option value="ETI Uity 2 Special">ETI UITY 2 SPECIAL</option>
                <option value="Environmental Studies">Environmental Studies</option>
            </select>
            <button onclick="startExam()">Start Exam</button>
        </div>

        <!-- ✅ Quiz UI -->
        <div id="quiz-content" style="display: none;">
            <div class="timer" id="timer">Time Left: 120:00</div>
            <h1>Main Exam</h1>
            <p>Total: <span id="total-questions">0</span> | Attempted: <span id="attempted-questions">0</span> | Unattempted: <span id="unattempted-questions">0</span></p>

            <h2 id="question"></h2>
            <button class="option" onclick="selectAnswer(0)"></button>
            <button class="option" onclick="selectAnswer(1)"></button>
            <button class="option" onclick="selectAnswer(2)"></button>
            <button class="option" onclick="selectAnswer(3)"></button>

            <div class="btn-container">
                <button class="btn prev" onclick="prevQuestion()">Previous</button>
                <button class="btn next" onclick="nextQuestion()">Next</button>
                <button class="btn submit-btn" onclick="submitQuiz()">Submit</button>
            </div>
        </div>
    </div>

    <script>
    let timeLeft = 120 * 60;
    let timerInterval;
    let examCompleted = false;
    let questions = [];
    let currentQuestionIndex = 0;
    let selectedAnswers = {};
    let attemptedQuestions = new Set();
    let correctAnswers = 0;
    
    function startExam() {
        let selectedQuiz = document.getElementById("quizDropdown").value;
        if (!selectedQuiz) {
            alert("Please select a quiz!");
            return;
        }

        fetch(`/fetch-questions?quizName=${encodeURIComponent(selectedQuiz)}`)
            .then(response => response.json())
            .then(data => {
                if (!data || data.length == 0) {
                    showUnderConstruction();
                    return;
                } else if (data.error) throw new Error(data.error);
                questions = data;
                document.getElementById("total-questions").innerText = questions.length;
                document.getElementById("quiz-selection").style.display = "none";
                document.getElementById("quiz-content").style.display = "block";
                startTimer();
                displayQuestion();
                generateNumberPanel();
            })
            .catch(error => {
                showUnderConstruction();
                console.error("Error fetching questions:", error);
                alert("Failed to load questions.");
            });
    }

    function showUnderConstruction() {
        alert("THE SELECTED COURSE IS NOT ADDED IN DATABASE SORRY FOR TROUBLE TRY AFTER SOME TIME OR SEND MESSAGE On CONTACT US");
    }

    function startTimer() {
        timerInterval = setInterval(() => {
            let minutes = Math.floor(timeLeft / 60);
            let seconds = timeLeft % 60;
            document.getElementById("timer").innerText = `Time Left: ${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
            timeLeft--;

            if (timeLeft < 0) {
                clearInterval(timerInterval);
                if (!examCompleted) {
                    alert("Time is up! Submitting quiz...");
                    showResults();
                }
            }
        }, 1000);
    }

    function displayQuestion() {
        if (currentQuestionIndex < 0) currentQuestionIndex = 0;
        if (currentQuestionIndex >= questions.length) return;

        let q = questions[currentQuestionIndex];
        document.getElementById("question").innerText = q.question;

        let options = document.querySelectorAll(".option");
        let optionKeys = ["A", "B", "C", "D"];

        options.forEach((btn, index) => {
            let optionText = q.options?.[optionKeys[index]]; 
            if (optionText) {
                btn.innerText = optionText;
                btn.style.display = "block"; 
            } else {
                btn.style.display = "none"; 
            }
            btn.classList.remove("selected");
        });

        if (selectedAnswers[currentQuestionIndex] !== undefined) {
            let selectedIndex = selectedAnswers[currentQuestionIndex];
            options[selectedIndex].classList.add("selected");
        }

        updateStats();
    }

    function selectAnswer(selectedIndex) {
        selectedAnswers[currentQuestionIndex] = selectedIndex;
        attemptedQuestions.add(currentQuestionIndex);

        document.querySelectorAll(".option").forEach((btn, index) => {
            btn.classList.remove("selected");
            if (index === selectedIndex) btn.classList.add("selected");
        });

        updateStats();
        changeNumberColor(currentQuestionIndex);
    }

    function updateStats() {
        let attempted = attemptedQuestions.size;
        let total = questions.length;
        document.getElementById("attempted-questions").innerText = attempted;
        document.getElementById("unattempted-questions").innerText = total - attempted;
    }

    function prevQuestion() { 
        if (currentQuestionIndex > 0) {
            currentQuestionIndex--; 
            displayQuestion(); 
        }
    }

    function nextQuestion() { 
        if (currentQuestionIndex < questions.length - 1) {
            currentQuestionIndex++;
            displayQuestion();
        }
    }

    function submitQuiz() {
        let totalQuestions = questions.length;
        let attempted = attemptedQuestions.size;

        if (attempted < totalQuestions) {
            alert("⚠ All questions are compulsory! Please attempt all questions before submitting.");
            return;
        }

        clearInterval(timerInterval);
        examCompleted = true;

        let correct = 0;
        questions.forEach((q, index) => {
            if (selectedAnswers[index] !== undefined) {
                let selectedOption = selectedAnswers[index];
                let correctOption = ["A", "B", "C", "D"].indexOf(q.correct_option?.trim().toUpperCase());
                if (selectedOption === correctOption) {
                    correct++;
                }
            }
        });

        correctAnswers = correct;
        showResults();
    }

    function showResults() {
        document.body.innerHTML = `
            <div class="quiz-container">
                <h1>Quiz Results</h1>
                <p>Total Questions: <strong>${questions.length}</strong></p>
                <p>Attempted Questions: <strong>${attemptedQuestions.size}</strong></p>
                <p>Unattempted Questions: <strong>${questions.length - attemptedQuestions.size}</strong></p>
                <p>Correct Answers: <strong>${correctAnswers}</strong></p>
                <p>Incorrect Answers: <strong>${attemptedQuestions.size - correctAnswers}</strong></p>
                <p>Percentage: <strong>${((correctAnswers / questions.length) * 100).toFixed(2)}%</strong></p>
                <h2 id="final-message"></h2>
                <button onclick="location.reload()">Back to Home</button>
            </div>
        `;

        let finalMessage = document.getElementById("final-message");
        let percentage = (correctAnswers / questions.length) * 100;
        if (percentage >= 50) {
            finalMessage.innerText = "🎉 Congratulations! You Passed!";
            finalMessage.style.color = "green";
        } else {
            finalMessage.innerText = "❌ Try Again! You Failed.";
            finalMessage.style.color = "red";
        }
    }

    function generateNumberPanel() {
        let panel = document.getElementById('number-panel');
        panel.innerHTML = '';  // Clear previous panel content

        for (let i = 1; i <= questions.length; i++) {
            let button = document.createElement('button');
            button.innerText = i;
            button.classList.add('btn');
            button.classList.add('question-number');
            button.onclick = function() {
                currentQuestionIndex = i - 1;
                displayQuestion();
            };

            // Highlight attempted question numbers
            if (attemptedQuestions.has(i - 1)) {
                button.classList.add('attempted');
            }

            panel.appendChild(button);
        }
    }

    function changeNumberColor(index) {
        const numberButtons = document.querySelectorAll('.number-panel button');
        numberButtons[index].style.backgroundColor = 'orange';  // Change color when attempted
    }
</script>

</body>
</html>
